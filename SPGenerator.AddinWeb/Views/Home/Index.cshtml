@model SPGenerator.AddinWeb.ViewModels.Home.IndexVM

<div class="container">
    @Header()
</div>
<div class="container">
    @MainForm()
</div>

@helper Header()
{
    <div class="row">
        <a href="@Model.HostWebUrl" class="btn btn-info col-sm-3 col-sm-offset-9" target="_blank">
            <span class="glyphicon glyphicon-arrow-left pull-left"></span>
            Idź do zbioru witryn
        </a>
    </div>
}

@helper MainForm()
{
if (Model.ShowListVMs)
{
    var selectListItems = Model.ListVMs.Select(listVM => new SelectListItem()
    {
        Text = listVM.Title,
        Value = listVM.Title,
        Selected = listVM == Model.SelectedListVM
    }).ToList();
    var selectList = new SelectList(selectListItems, "Text", "Value");
        <form method="post" id="mainForm" class="form-horizontal">
            @for (var i = 0; i < Model.ListVMs.Count; ++i)
            {
                @Html.HiddenFor(m => m.ListVMs[i].Title)
                @Html.HiddenFor(m => m.ListVMs[i].ServerRelativeUrl)
            }
            @Html.HiddenFor(m => m.HostWebUrl)
            <div class="form-group">
                @Html.LabelFor(m => m.SelectedListVM.Title, new { @class = "control-label col-sm-3" })
                <div class="col-sm-6">
                    @Html.DropDownListFor(m => m.SelectedListVM.Title, selectList, "",
                       new { @class = "form-control", @onchange = "selectList()" })
                </div>
                <a href="@(Model.SelectedListVM == null ? "" : Model.SelectedListAbsoluteUrl)"
                   class="btn btn-info col-sm-3 @(Model.SelectedListVM == null ? "disabled" : "")" target="_blank">
                    <span class="glyphicon glyphicon-list-alt pull-left"></span>
                    Idź do  wybranej listy
                </a>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.RecordsToGenerateCount, new { @class = "control-label col-sm-3" })
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.RecordsToGenerateCount,
                       new { @class = "form-control", @type = "number", @min = "1", @max = "2000" })
                </div>
            </div>
            @Columns()
            <a class="btn btn-info col-sm-offset-9 col-sm-3 
                    @(Model.SelectedListVM == null ? "disabled" : "")" href="javascript:generateData()">
                    <span class="glyphicon glyphicon-save pull-left"></span>
                Generuj dane
            </a>
        </form>
}
else
{
        <div class="row">
            <div class="col-sm-12">
                Nie znaleziono w zbiorze witryn żadnej listy na którą
                możliwe byłoby wygenerowanie danych
            </div>
        </div>
}
}

@helper Columns()
{
if (Model.SelectedListVM != null && Model.SelectedListVM.ColumnVMList.Any())
{
    var columnSequence = 0;
        <div class="row">
            <label class="col-sm-3 control-label">Pola listy</label>
        </div>
        <div class="row">
            <div class="panel-group col-sm-offset-3 col-sm-6" id="accordion" role="tablist" aria-multiselectable="true">
                @for (var i = 0; i < Model.SelectedListVM.ColumnVMList.Count; ++i)
                {
                    var columnId = "column" + columnSequence++;
                    MvcHtmlString result = Html.EditorFor(m => m.SelectedListVM.ColumnVMList[i]);
                    @ColumnCollapse(Model.SelectedListVM.ColumnVMList[i].ColumnName, columnId, result);
                }
            </div>
        </div>
}
}

@helper ColumnCollapse(string columnName, string columnId, MvcHtmlString innerContent)
{
var headingId = columnId + "heading";
var collapseId = columnId + "collapse";
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="@headingId">
            <span class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#@collapseId" aria-expanded="false" aria-controls="@collapseId">
                    @columnName
                </a>
            </span>
        </div>
        <div id="@collapseId" class="panel-collapse collapse" role="tabpanel" aria-labelledby="@headingId">
            <div class="panel-body">
                @innerContent
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    @{
        var listSelectActionUrl = Url.Action("ListSelect", "Home", new { @SPHostUrl = Request.QueryString["SPHostUrl"] });
        var generateDataActionUrl = Url.Action("GenerateData", "Home", new { @SPHostUrl = Request.QueryString["SPHostUrl"] });
    }
    selectList = function () {
        mainForm.action = "@listSelectActionUrl";
        mainForm.submit();
    }
    generateData = function () {
        mainForm.action = "@generateDataActionUrl";
        mainForm.submit();
    }
</script>